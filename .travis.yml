sudo: required

env:
  global:
  - IDCODE=$TRAVIS_BUILD_DIR #build dir
  # - IDprediction=$PWD>>$TRAVIS_BUILD_DIR/filelocation.txt;$TRAVIS_BUILD_DIR/Run.sh

language: python

python:
  # We don't actually use the Travis Python, but this keeps it organized.
  - "3.8"

install:
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - source "$HOME/miniconda/etc/profile.d/conda.sh"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda env list
  - conda info -a
  - conda create --name prr python=3.8
  - conda activate prr
  - conda install -n prr -c conda-forge rdkit
  - pip install seaborn
  - conda install -n prr numpy
  - conda install -n prr scipy
  - conda install -n prr pandas
  - conda install -n prr regex
  - conda install -n prr -c conda-forge statsmodels
  - conda install -n prr -c conda-forge scikit-learn
  - conda install -n prr -c conda-forge codecov
  - sudo apt-get install -y texlive texlive-latex-recommended
  - sudo apt-get install texlive-latex-extra texlive-fonts-recommended dvipng cm-super

script:
  - chmod +x INSTALL.sh
  - chmod +x Run.sh
  - cd TryYourself/nAlkaneIDT/

  # - echo 'Analyzing Data - Need User Input'
  # - pwd>>$TRAVIS_BUILD_DIR/filelocation.txt;$TRAVIS_BUILD_DIR/Run.sh -a trainset.csv

  - echo 'Checking Bond Details for Heptane'
  - pwd>>$TRAVIS_BUILD_DIR/filelocation.txt
  - rm -R -- */
  - $TRAVIS_BUILD_DIR/Run.sh --b CCCCCCC
  - bash <(curl -s https://codecov.io/bash) -cF python

  - echo 'Generating Histograms of parameters for each fuel'
  - pwd>>$TRAVIS_BUILD_DIR/filelocation.txt
  - rm -R -- */
  - $TRAVIS_BUILD_DIR/Run.sh --h trainset.csv
  - bash <(curl -s https://codecov.io/bash) -cF python

  - echo 'Multiple regression'
  - pwd>>$TRAVIS_BUILD_DIR/filelocation.txt
  - rm -R -- */  
  - $TRAVIS_BUILD_DIR/Run.sh --algo multi --train trainset.csv
  - $TRAVIS_BUILD_DIR/Run.sh --algo multi --test testset.csv
  - bash <(curl -s https://codecov.io/bash) -cF python

  - echo 'Multiple regression with significance and feature elimination'
  - pwd>>$TRAVIS_BUILD_DIR/filelocation.txt
  - rm -R -- */
  - $TRAVIS_BUILD_DIR/Run.sh --algo multi --train trainset.csv --r True --s 0.1
  - $TRAVIS_BUILD_DIR/Run.sh --algo multi --test testset.csv
  - bash <(curl -s https://codecov.io/bash) -cF python

  - echo 'Tree based clustering algorithm'
  - pwd>>$TRAVIS_BUILD_DIR/filelocation.txt
  - rm -R -- */  
  - $TRAVIS_BUILD_DIR/Run.sh --algo tree --train trainset.csv --c 0.1
  - $TRAVIS_BUILD_DIR/Run.sh --algo tree --test testset.csv
  - bash <(curl -s https://codecov.io/bash) -cF python

  - echo 'Spath algorithm'
  - rm -R -- */  
  - $TRAVIS_BUILD_DIR/Run.sh --algo spath --train trainset.csv --i 200 --n 3
  - $TRAVIS_BUILD_DIR/Run.sh --algo spath --test testset.csv
  - bash <(curl -s https://codecov.io/bash) -cF python

  - echo 'External test'
  - rm -R -- */  
  - $TRAVIS_BUILD_DIR/Run.sh --algo GMM --train trainset.csv --n 3
  - $TRAVIS_BUILD_DIR/Run.sh --algo GMM --test testset.csv
  - $TRAVIS_BUILD_DIR/Run.sh --a pressure --sfile trainset.csv
  - $TRAVIS_BUILD_DIR/Run.sh --a temperature --sfile trainset.csv
  - $TRAVIS_BUILD_DIR/Run.sh --a distribution --sfile trainset.csv
  - $TRAVIS_BUILD_DIR/Run.sh --a parameter --sfile trainset.csv      
  - bash <(curl -s https://codecov.io/bash) -cF python

  - cd ..
  - cd BostonHousingPrice/

  - echo 'Boston Hosing Price Data - Training and Testing'
  - pwd>>$TRAVIS_BUILD_DIR/filelocation.txt
  - $TRAVIS_BUILD_DIR/Run.sh --algo GMM --train trainset.csv --n 5
  - $TRAVIS_BUILD_DIR/Run.sh --algo GMM --test testset.csv  
  - bash <(curl -s https://codecov.io/bash) -cF python
    

after_success:
  - codecov
